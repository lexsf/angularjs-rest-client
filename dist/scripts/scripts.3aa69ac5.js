"use strict";function displayError(a,b){return b.errorMessage="an error occured. try again. "+a.status+"/"+a.statusText,!1}var app=angular.module("angularjsRestClientApp",["ngRoute","mgcrea.ngStrap","restangular","ngSanitize"]).config(["$routeProvider","RestangularProvider",function(a,b){b.setErrorInterceptor(function(a){return displayError(a)}),a.when("/main",{templateUrl:"views/main.html",controller:"MainCtrl"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl"}).when("/task",{templateUrl:"views/task.html",controller:"TaskCtrl"}).when("/task/:taskId",{templateUrl:"views/task.html",controller:"TaskCtrl"}).when("/task/edit/:taskId",{templateUrl:"views/taskEdit.html",controller:"TaskeditCtrl"}).when("/language",{templateUrl:"views/language.html",controller:"LanguageCtrl"}).otherwise({redirectTo:"/main"})}]);app.run(["$rootScope","Restangular",function(a,b){a.API="http://localhost:8080",b.setBaseUrl(a.API),b.setErrorInterceptor(function(b){return displayError(b,a)})}]),angular.module("angularjsRestClientApp").service("taskService",["Restangular","$location","$timeout",function(a){return{getAll:function(){return a.all("task").getList().$object},updateTask:function(a){var b=a.put();return b},getTask:function(b){return a.one("task",b).get()},getTaskRevisionNumbers:function(b){return a.all("task/"+b+"/revisions").getList().$object},getTaskWithRevision:function(b,c){return a.one("task/"+b+"/revisions/"+c).get()}}}]),angular.module("angularjsRestClientApp").controller("MainCtrl",["$scope",function(){}]),angular.module("angularjsRestClientApp").controller("AboutCtrl",["$scope",function(a){a.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}]),angular.module("angularjsRestClientApp").controller("TaskCtrl",["$scope","taskService","Restangular","$routeParams","$window",function(a,b,c,d){a.taskId=d.taskId,a.loadTaskList=function(){a.taskList=b.getAll()},a.loadSingleTask=function(b){a.loadSingleTaskWithRevision(b,null)},a.loadSingleTaskWithRevision=function(c,d){a.revisions=b.getTaskRevisionNumbers(a.taskId),a.currentRevision=d,null==d?b.getTask(a.taskId).then(function(b){a.selectedTask=b}):b.getTaskWithRevision(a.taskId,a.revision).then(function(b){a.selectedTask=b})},null==a.taskId?a.loadTaskList():(a.taskList={},null!=d.revision?(a.revision=d.revision,a.loadSingleTaskWithRevision(a.taskId,a.revision)):a.loadSingleTask(a.taskId))}]),angular.module("angularjsRestClientApp").controller("LanguageCtrl",["$scope",function(a){a.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}]),angular.module("angularjsRestClientApp").controller("FooterCtrl",["$scope","Restangular",function(a,b){a.modal={content:"--"},a.save=function(c){a.API=c.url,b.setBaseUrl(a.API)},a.startModal=function(){a.formdata=new Object,a.formdata.url=a.API}}]),angular.module("angularjsRestClientApp").controller("TaskeditCtrl",["$scope","$routeParams","taskService","Restangular","$location",function(a,b,c,d,e){a.taskId=b.taskId,a.selectedTask={},c.getTask(a.taskId).then(function(b){a.selectedTask=b}),a.updateTask=function(b){c.updateTask(b).then(function(){a.goBack()})},a.goBack=function(){e.path("task/"+a.taskId)},a.addSubtask=function(){a.selectedTask.subTasks.push({})},a.removeSubtask=function(b){a.selectedTask.subTasks.pop(b)}}]);